name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  msvc_users_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Change to msvc-users directory
        run: cd msvc-users

      - name: Run tests for msvc-users
        run: ./mvnw test -Dspring.profiles.active=test
        working-directory: msvc-users

  msvc_courses_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Change to msvc-courses directory
        run: cd msvc-courses

      - name: Run tests for msvc-courses
        run: ./mvnw test -Dspring.profiles.active=test
        working-directory: msvc-courses

  build_and_push_docker_images:
    runs-on: ubuntu-latest
    needs: [ msvc_users_test, msvc_courses_test ]
    if: ${{ needs.msvc_users_test.result == 'success' && needs.msvc_courses_test.result == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker images
        run: docker-compose -f docker-compose.dev.yml build --pull

      - name: Log in to Docker registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin docker.io

      - name: Push Docker images
        run: docker-compose -f docker-compose.dev.yml push

  deploy_to_vps:
    runs-on: ubuntu-latest
    needs: [ build_and_push_docker_images ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare docker-compose file
        run: |
          sed -i 's|\${secrets.MSVC_USERS_PORT}|'"${{ secrets.MSVC_USERS_PORT }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_USERS_DB_HOST}|'"${{ secrets.MSVC_USERS_DB_HOST }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_USERS_DB_NAME}|'"${{ secrets.MSVC_USERS_DB_NAME }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_USERS_DB_USER}|'"${{ secrets.MSVC_USERS_DB_USER }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_USERS_DB_PASS}|'"${{ secrets.MSVC_USERS_DB_PASS }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_COURSES_URL}|'"${{ secrets.MSVC_COURSES_URL }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_COURSES_DB_HOST}|'"${{ secrets.MSVC_COURSES_DB_HOST }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_COURSES_PORT}|'"${{ secrets.MSVC_COURSES_PORT }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_COURSES_DB_NAME}|'"${{ secrets.MSVC_COURSES_DB_NAME }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_COURSES_DB_USER}|'"${{ secrets.MSVC_COURSES_DB_USER }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_COURSES_DB_PASS}|'"${{ secrets.MSVC_COURSES_DB_PASS }}"'|g' docker-compose.prod.yml
          sed -i 's|\${secrets.MSVC_USERS_URL}|'"${{ secrets.MSVC_USERS_URL }}"'|g' docker-compose.prod.yml

      - name: Transfer docker-compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: ${{ secrets.VPS_PATH }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose -f ${{ secrets.VPS_PATH }}/docker-compose.prod.yml pull
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose -f ${{ secrets.VPS_PATH }}/docker-compose.prod.yml down
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose -f ${{ secrets.VPS_PATH }}/docker-compose.prod.yml up -d
